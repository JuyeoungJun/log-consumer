spring:
  profiles:
    group:
      prod: "prod_env"
---
spring:
  profiles:
    group:
      dev: "dev_env"

---
#운영환경
spring:
  config:
    activate:
      on-profile: "prod_env"

  kafka:
    consumer:
      group-id: my-test
      enable-auto-commit: true
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: syslog
    bootstrap-servers: 10.7.27.9:9092
    zipkin:
      sender:
        type: kafka
server:
  port: 8080
influx:
  server: "http://10.7.27.9:8086/"
  token: "W90KOru9HsUcsbJ-7NDZvl-ECE5OdsKe3F8LsuNlY5pNQr9mtrE887RnARrNP1Jr6MgE3BACeXptTOkp6E5ibQ=="
  org: "Gabia"
  bucket: "Cron"
---
#개발환경
spring:
  config:
    activate:
      on-profile: "dev_env"

  kafka:
    consumer:
      group-id: my-test
      enable-auto-commit: true
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: syslog
    bootstrap-servers: 182.162.142.151:9093
    zipkin:
      sender:
        type: kafka
server:
  port: 8080
influx:
  server: "http://182.162.142.151:8086"
  token: "W90KOru9HsUcsbJ-7NDZvl-ECE5OdsKe3F8LsuNlY5pNQr9mtrE887RnARrNP1Jr6MgE3BACeXptTOkp6E5ibQ=="
  org: "Gabia"
  bucket: "Cron"
