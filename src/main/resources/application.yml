spring:
  profiles:
    group:
      prod: "prod_env, common"
---
spring:
  profiles:
    group:
      dev: "dev_env, common"

---
#운영환경
spring:
  config:
    activate:
      on-profile: "prod_env"
  notice:
    url: "http://10.7.27.11:80/notifications/notice"
  cron:
    server:
      url: "http://10.7.27.11:80/"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(grsR77SEhN7kmgtfZg7KbctEBHpLc/jA4pLSIrBXErbDc66kd0glUpfwR/4j9SK+91evde+5yCycfYe4wlGJq7tFw2vUm80TjNV+qinr1wP5uJqdx77In475nhw/qy2x)
    username: ENC(vlCqS3V8pcLgDf9i7j4f2Q==)
    password: ENC(zKcrcC7yhJI4oX1N3yIU6ekob3kkHw+T)
  jpa:
    properties:
      hibernate:
        format_sql: true
  kafka:
    consumer:
      group-id: my-test
      enable-auto-commit: true
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: syslog
    bootstrap-servers: 10.7.27.9:9092
    zipkin:
      sender:
        type: kafka
server:
  port: 8081
influx:
  server: "http://10.7.27.9:8086/"
  token: "W90KOru9HsUcsbJ-7NDZvl-ECE5OdsKe3F8LsuNlY5pNQr9mtrE887RnARrNP1Jr6MgE3BACeXptTOkp6E5ibQ=="
  org: "Gabia"
  bucket: "Cron"
---
#개발환경
spring:
  config:
    activate:
      on-profile: "dev_env"
  notice:
    url: "http://139.150.64.58:80/notifications/notice"
  cron:
    server:
      url: "http://localhost:8081/"
#      url: "http://139.150.64.58:80/"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(FT9MAa2OjCi3L4KxLTtuihNe7aaTI+MqU7BqleHlSm37pH/jCsc6kfPLgp0XrR+IhfZvnVMlBz0tsueSbnsMlOC+XgPAUnGAhw8b8BgcqUotG++IpcKRCnqzkJPGp4O3G8CglAb5c18=)
    username: ENC(vlCqS3V8pcLgDf9i7j4f2Q==)
    password: ENC(zKcrcC7yhJI4oX1N3yIU6ekob3kkHw+T)
  jpa:
    properties:
      hibernate:
        format_sql: true
  kafka:
    consumer:
      group-id: my-test
      enable-auto-commit: true
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: syslog
    bootstrap-servers: localhost:9092
#    bootstrap-servers: 182.162.142.151:9093

    zipkin:
      sender:
        type: kafka
server:
  port: 8083
influx:
  server: "http://182.162.142.151:8086"
  token: "W90KOru9HsUcsbJ-7NDZvl-ECE5OdsKe3F8LsuNlY5pNQr9mtrE887RnARrNP1Jr6MgE3BACeXptTOkp6E5ibQ=="
  org: "Gabia"
  bucket: "Cron"
---
spring:
  config:
    activate:
      on-profile: "common"
  jasypt:
    password: "cron_monitoring"
    algorithm: "PBEWithMD5AndDES"
jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    bean: jasyptStringEncryptor
    property:
      prefix: ENC(
      suffix: )
    pool-size: 1
logging:
  config: classpath:Log4j2.xml